{"version":3,"sources":["Components/NavBar.js","Components/Search.js","Components/Index.js","Components/AllDocuments.js","Components/Document.js","Components/Clear.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","linkStyle","color","textDecoration","style","background","textAlign","padding","to","Component","Search","state","word","references","onSearch","e","preventDefault","payload","axios","post","then","res","data","length","setState","alert","console","log","onChange","target","name","value","getStyle","borderBottom","onSubmit","this","display","type","flex","placeholder","className","map","reference","action","Index","docs","onIndex","height","AllDocuments","get","doc","Document","id","props","match","params","text","Axios","Clear","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a67f90a7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    const headerStyle = {\r\n      background: \"#333\",\r\n      color: \"#fff\",\r\n      textAlign: \"center\",\r\n      padding: \"10px\"\r\n    };\r\n\r\n    const linkStyle = {\r\n      color: \"#fff\",\r\n      textDecoration: \"none\"\r\n    };\r\n    return (\r\n      <header style={headerStyle}>\r\n        <h1>TapSearch</h1>\r\n        <Link style={linkStyle} to=\"/index\">\r\n          Index\r\n        </Link>{\" \"}\r\n        |{\" \"}\r\n        <Link style={linkStyle} to=\"/search\">\r\n          Search\r\n        </Link>{\" \"}\r\n        |{\" \"}\r\n        <Link style={linkStyle} to=\"/\">\r\n          All Documents\r\n        </Link>{\" \"}\r\n        |{\" \"}\r\n        <Link style={linkStyle} to=\"/clear\">\r\n          Clear\r\n        </Link>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nexport class Search extends Component {\r\n  state = {\r\n    word: \"\",\r\n    references: []\r\n  };\r\n\r\n  onSearch = e => {\r\n    e.preventDefault();\r\n    var payload = {\r\n      word: this.state.word\r\n    };\r\n    axios\r\n      .post(\"https://tapsearchbackend.herokuapp.com/api/search\", payload)\r\n      .then(res => {\r\n        if (res.data[\"docs\"].length !== 0) {\r\n          this.setState({ word: \"\" });\r\n          this.setState({ references: res.data[\"docs\"] });\r\n        } else {\r\n          this.setState({ word: \"\" });\r\n          this.setState({ references: [] });\r\n          alert(\"Error. Given word is not present in any document.\");\r\n        }\r\n        console.log(this.state.references);\r\n      });\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  getStyle = () => {\r\n    return {\r\n      background: \"#f4f4f4\",\r\n      padding: \"10px\",\r\n      borderBottom: \"1px #ccc dotted\"\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSearch} style={{ display: \"flex\" }}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"word\"\r\n            style={{ flex: \"10\", padding: \"5px\" }}\r\n            placeholder=\"Search the documents...\"\r\n            value={this.state.word}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Search\"\r\n            className=\"btn\"\r\n            style={{ flex: \"1\" }}\r\n          />\r\n        </form>\r\n        {this.state.references.map(reference => (\r\n          <div style={this.getStyle()}>\r\n            <p>\r\n              No of Occurences: {reference[0]}\r\n              <br />\r\n              DocumentID: {reference[1]}\r\n              <br />\r\n              <form action={\"/document/\" + reference[1]}>\r\n                <input type=\"submit\" value=\"See the Document\" />\r\n              </form>\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport class Index extends Component {\r\n  state = {\r\n    docs: \"\"\r\n  };\r\n\r\n  onIndex = e => {\r\n    e.preventDefault();\r\n    var payload = { data: this.state.docs };\r\n    axios\r\n      .post(\"https://tapsearchbackend.herokuapp.com/api/index\", payload)\r\n      .then(res => {\r\n        if (res.data[\"status\"] === 1) {\r\n          alert(\"Sucessfully indexed.\");\r\n          this.setState({ docs: \"\" });\r\n        } else alert(\"Error. Index it again.\");\r\n      });\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onIndex} style={{ display: \"flex\" }}>\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"docs\"\r\n            style={{ flex: \"10\", padding: \"5px\", height: \"610px\" }}\r\n            placeholder=\"Index the documents.\"\r\n            value={this.state.docs}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"IndexIt\"\r\n            className=\"btn\"\r\n            style={{ flex: \"1\", height: \"20px\" }}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport class AllDocuments extends Component {\r\n  state = {\r\n    docs: []\r\n  };\r\n\r\n  getStyle = () => {\r\n    return {\r\n      background: \"#f4f4f4\",\r\n      padding: \"10px\",\r\n      borderBottom: \"1px #ccc dotted\"\r\n    };\r\n  };\r\n\r\n  componentWillMount() {\r\n    axios.get(\"https://tapsearchbackend.herokuapp.com/api/getall\").then(res => {\r\n      this.setState({\r\n        docs: res.data[\"docs\"]\r\n      });\r\n      console.log(res.data[\"docs\"]);\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.docs.map(doc => (\r\n          <div style={this.getStyle()}>\r\n            <p>\r\n              DocumentID: {doc[0]}\r\n              <br />\r\n              Document: {doc[1]}\r\n              <br />\r\n              <form action={\"/TapSearch/document/\" + doc[0]}>\r\n                <input type=\"submit\" value=\"See the Document\" />\r\n              </form>\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllDocuments;\r\n","import React, { Component } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport class Document extends Component {\r\n  state = {\r\n    id: this.props.match.params.id,\r\n    text: \"\"\r\n  };\r\n\r\n  componentWillMount() {\r\n    Axios.get(\r\n      \"https://tapsearchbackend.herokuapp.com/api/document/\" + this.state.id\r\n    ).then(res => {\r\n      if (res.data[\"text\"].length === 0) {\r\n        alert(\"No such document!\");\r\n      } else {\r\n        this.setState({ text: res.data[\"text\"] });\r\n      }\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.state.text}</div>;\r\n  }\r\n}\r\n\r\nexport default Document;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport class Clear extends Component {\r\n  componentWillMount() {\r\n    axios.get(\"https://tapsearchbackend.herokuapp.com/api/clear\");\r\n  }\r\n  render() {\r\n    return <div>All the indexes and documents are cleared.</div>;\r\n  }\r\n}\r\n\r\nexport default Clear;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./Components/NavBar\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport Search from \"./Components/Search\";\nimport Index from \"./Components/Index\";\nimport AllDocuments from \"./Components/AllDocuments\";\nimport Document from \"./Components/Document\";\nimport Clear from \"./Components/Clear\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <NavBar />\n        <Route exact path=\"/TapSearch/search\" component={Search} />\n        <Route exact path=\"/TapSearch/index\" component={Index} />\n        <Route path=\"/TapSearch\" component={AllDocuments} />\n        <Route exact path=\"/TapSearch/document/:id\" component={Document} />\n        <Route exact path=\"/TapSearch/clear\" component={Clear} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}